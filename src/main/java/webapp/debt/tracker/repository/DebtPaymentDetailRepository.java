package webapp.debt.tracker.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import webapp.debt.tracker.model.DebtPaymentDetail;

/**
 * Generated by Spring Data Generator on 10/03/2020
 */
@Repository
public interface DebtPaymentDetailRepository extends CrudRepository<DebtPaymentDetail, Integer> {
	List<DebtPaymentDetail> findByDebtInfoDebtInfoId(Integer debtInfoId);

	@Query(value = "select *\r\n" + "from (\r\n" + " select *, row_number() over\r\n"
			+ "      (partition by debt_info_id order by estimated_payment_date desc) row_num from debt_payment_detail dpd where dpd.debt_info_id in \r\n"
			+ "(select di.debt_info_id from debt_info di  where di.app_user_id =:appUserId)) t\r\n"
			+ "where row_num = 1 and estimated_payment_date < now() and payment_status = 'pending';", nativeQuery = true)
	List<DebtPaymentDetail> getDebtPaymentPassPaymentDateAndPending(@Param("appUserId") Integer appUserId);
	
	@Query(value="select *\r\n" + 
			"from (\r\n" + 
			" select *, row_number() over\r\n" + 
			"      (partition by debt_info_id order by estimated_payment_date desc) row_num from debt_payment_detail dpd where dpd.debt_info_id in \r\n" + 
			"(select di.debt_info_id from debt_info di  where di.app_user_id =:appUserId)) t\r\n" + 
			"where row_num = 1 and estimated_payment_date <> actual_payment_date and payment_status = 'paid';", nativeQuery=true)
	List<DebtPaymentDetail> getDebtPaymentPassPaymentDateAndPaid(@Param("appUserId") Integer appUserId);
}
